@using ClothBazar.Web.Code 
@model ClothBazar.Entities.ShopViewModel
@{
    ViewBag.Title = "Index";
    var defaultImageURL = "/Content/images/system/placeholder-image.png";
}

<!-- Page title -->
<div class="page-title parallax parallax1">
	<div class="container">
		<div class="row">
			<div class="col-md-12">
				<div class="page-title-heading">
					<h1 class="title">Shop</h1>
				</div><!-- /.page-title-heading -->
			</div><!-- /.col-md-12 -->
		</div><!-- /.row -->
	</div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
	<div class="container">
		<div class="row">
			<div class="col-md-3">
				<div class="sidebar slidebar-shop">
					<div class="widget widget-search">
						<form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
							<label>
								<input type="search" class="search-field" placeholder="Search …" value="@Model.SearchTerm" name="searchTerm">
							</label>
							<input type="submit" class="search-submit" value="Search">
						</form>
					</div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)SortByEnums.Default, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty)">Default - Newest</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryID = Model.CategoryID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryID = Model.CategoryID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow, categoryID = Model.CategoryID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>

                        @*<ul> 
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Default, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty)">Default - Newest</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryID = Model.CategoryID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryID = Model.CategoryID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow, categoryID = Model.CategoryID  })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>*@

                    </div>
					<div class="widget widget_tag">
						<h5 class="widget-title">
							Featured Categories
						</h5>
                        <div class="tag-list">
                            @foreach (var category in Model.FeaturedCategories)
                            {
                                //<a data-href="@Url.Action("FilterProducts", "Shop", new { categoryID = category.Id, sortBy = Model.SortBy })" class="dataLink @(Model.CategoryID.HasValue && Model.CategoryID.Value == category.Id ? "active" : string.Empty)">@category.name</a>
                                <a href="@Url.Action("Index", "Shop", new { categoryID = category.Id, sortBy=Model.SortBy })" class=" @(Model.CategoryID.HasValue && Model.CategoryID.Value == category.Id ? "active" : string.Empty)">@category.name</a>
                            }
                            </div>
					</div>
					<div class="widget widget-price">
						<h5 class="widget-title">Filter by price</h5>
						<div class="price-filter">
							<div id="slide-range1"></div>
							<p class="amount">
								Price: <input type="text" id="amount" disabled="">
							</p>
						</div>
					</div><!-- /.widget -->
					<a href="@Url.Action("Index", "Shop")" class="btn btn-danger">Reset Filters</a>
				</div><!-- /.sidebar -->
			</div><!-- /.col-md-3 -->
			<div class="col-md-9">
                <div id="productsDiv">
                    @{
                        var filterProductsViewModel = new FilterProductsViewModel();
                        filterProductsViewModel.Products = Model.Products;
                        filterProductsViewModel.Pager = Model.Pager;
                        filterProductsViewModel.CategoryID = Model.CategoryID;
                        filterProductsViewModel.SortBy = Model.SortBy;

                        Html.RenderPartial("FilterProducts", filterProductsViewModel);
                    }

                    @*<div class="filter-shop clearfix">
                        <p class="showing-product float-right">
                            Showing @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1 ) – @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize)) of @Model.Pager.TotalItems Products
                        </p>
                    </div><!-- /.filte-shop -->
                    <div class="product-content product-threecolumn product-slidebar clearfix">
                        <ul class="product style2 sd1">

                            @foreach (var product in Model.Products)
                            {
                                var imageURL = string.IsNullOrEmpty(product.imgUrl) ? defaultImageURL : product.imgUrl;

                                <li class="product-item">
                                    <div class="product-thumb clearfix">
                                        <a href="#">
                                            <img src="@imageURL" alt="image" style="height: 295px;">
                                        </a>
                                    </div>
                                    <div class="product-info clearfix">
                                        <span class="product-title">
                                            @product.name
                                        </span>
                                        <div class="price">
                                            <ins>
                                                <span class="amount">$ @product.price</span>
                                            </ins>
                                        </div>
                                    </div>
                                    <div class="add-to-cart text-center">
                                        <a class="productAddToCart" data-id="@product.Id">ADD TO CART</a>
                                    </div>
                                    <a href="#" class="like"><i class="fa fa-heart-o"></i></a>
                                </li>
                            }
                        </ul><!-- /.product -->
                    </div>*@


                </div>

			</div><!-- /.col-md-9 -->
		</div><!-- /.row -->
	</div><!-- /.container -->
</section><!-- /.flat-row -->

<script>
	var callTimeout;
	var priceSlider = $("#slide-range1").slider({
		range: true,
		min: 0,
		max: @Model.MaximumPrice,
		values: [0, @Model.MaximumPrice],
		slide: function (event, ui) {
			var minPrice = ui.values[0];
			var maxPrice = ui.values[1];
			$("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");
			//clearTimeout(callTimeout);
            //callTimeout = setTimeout(PriceRangeChange, 500);
            console.log("slided");
            GetData();
		}
    });


    function GetData() {
        console.log("getdata in");
        //showLoader();
        $.ajax({ 
            url: '@Url.Action("FilterProducts","Shop")',
            data: {
                sortBy:'@Model.SortBy',
                categoryID:'@Model.CategoryID',
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }
        })
        .done(function (response) {
            console.log("done");
            $("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            console.log("fail");
            alert("FAIL");
        })
        console.log("getdata out");
    }





	@*$(".dataLink").click(function () {
		var url = $(this).attr("data-href");
		if (url != "" || url != undefined) {
			GetData(url);
		}
	});
	function GetData(dUrl){
		console.log("getdata in");
		showLoader();
		$.ajax({
			url: dUrl,
			data: {
				minimumPrice : priceSlider.slider("values", 0),
				maximumPrice : priceSlider.slider("values", 1)
			}
		})
        .done(function (response) {
        	console.log("done");
        	$("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	console.log("fail");
        	alert("FAIL");
        })
		.always(function(){
			console.log("always");
			hideLoader();
		});
		console.log("getdata out");
	}
	function PriceRangeChange(){
		$.ajax({
			url: '@Url.Action("FilterProducts", "Shop")',
			data: {
				searchTerm: $("#SearchTerm").val(),
				sortBy: $("#SortBy").val(),
				categoryID: $("#CategoryID").val(),
				minimumPrice : priceSlider.slider("values", 0),
				maximumPrice : priceSlider.slider("values", 1)
			}
		})
        .done(function (response) {
        	$("#productsDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	}*@
</script>

